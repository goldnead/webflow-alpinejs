{
  "version": 3,
  "sources": ["../../../components/Video/Video.js"],
  "sourcesContent": ["document.addEventListener(\"alpine:init\", () => {\n  Alpine.data(\"video\", () => ({\n    active: false,\n    url: \"\",\n    canPlay: false,\n    requiredConsent: \"third_party\",\n    showWarning: false,\n    allowAutoplay: false,\n    playAfterConsent: false,\n    init() {\n      this.requiredConsent = this.$root.dataset.consentHandle;\n      if (this.requiredConsent === \"none\") {\n        this.canPlay = true;\n      }\n      this.url = this.$root.dataset.url;\n    },\n    get coverDescription() {\n      return this.$refs.coverDescription.dataset.text.replace(\n        \"[url]\",\n        this.videoLink()\n      );\n    },\n    giveConsent($event) {\n      if ($event.detail.type === this.requiredConsent) {\n        this.canPlay = true;\n        this.showWarning = false;\n        this.allowAutoplay = true;\n\n        if (this.playAfterConsent) {\n          this.play();\n        }\n      }\n    },\n    removeConsent($event) {\n      if ($event.detail.type === this.requiredConsent) {\n        this.canPlay = false;\n        this.allowAutoplay = false;\n        this.playAfterConsent = false;\n        this.active = false;\n        // remove iframe\n        const iFrame = this.$root.querySelector(\"iframe\");\n        if (iFrame) {\n          iFrame.remove();\n        }\n      }\n    },\n    highlightConsent() {\n      this.$dispatch(\"highlight-consent\", { type: this.requiredConsent });\n      this.playAfterConsent = true;\n    },\n    consent() {\n      this.$dispatch(\"trigger-consent\", { type: this.requiredConsent });\n      this.playAfterConsent = true;\n    },\n    embedUrl() {\n      const urlParams = \"?rel=0&showinfo=0&autoplay=1\";\n      const embedUrl = this.$root.dataset.embedUrl;\n\n      return embedUrl + urlParams;\n    },\n    videoLink() {\n      return this.$root.dataset.url;\n      return \"https://www.youtube.com/watch?v=\" + this.videoId();\n    },\n    videoUrl() {\n      return this.$root.dataset.url;\n    },\n    get type() {\n      return this.$root.dataset.type;\n    },\n    videoId() {\n      if (this.type === \"vimeo\") {\n        return new URL(this.url).pathname.replace(\"/\", \"\");\n      }\n\n      var regExp =\n        /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n      var match = this.url.match(regExp);\n      return match && match[7].length == 11 ? match[7] : false;\n    },\n    thumbnailUrl() {\n      let url = `/thumbnail/${\n        this.type\n      }/${this.videoId()}.jpg?url=${this.videoUrl()}`;\n      return url;\n    },\n    play() {\n      if (this.canPlay) {\n        this.allowAutoplay = true;\n        this.active = true;\n      } else {\n        this.showWarning = true;\n      }\n    },\n  }));\n});\n"],
  "mappings": "MAAA,SAAS,iBAAiB,cAAe,IAAM,CAC7C,OAAO,KAAK,QAAS,KAAO,CAC1B,OAAQ,GACR,IAAK,GACL,QAAS,GACT,gBAAiB,cACjB,YAAa,GACb,cAAe,GACf,iBAAkB,GAClB,MAAO,CACL,KAAK,gBAAkB,KAAK,MAAM,QAAQ,cACtC,KAAK,kBAAoB,SAC3B,KAAK,QAAU,IAEjB,KAAK,IAAM,KAAK,MAAM,QAAQ,GAChC,EACA,IAAI,kBAAmB,CACrB,OAAO,KAAK,MAAM,iBAAiB,QAAQ,KAAK,QAC9C,QACA,KAAK,UAAU,CACjB,CACF,EACA,YAAYA,EAAQ,CACdA,EAAO,OAAO,OAAS,KAAK,kBAC9B,KAAK,QAAU,GACf,KAAK,YAAc,GACnB,KAAK,cAAgB,GAEjB,KAAK,kBACP,KAAK,KAAK,EAGhB,EACA,cAAcA,EAAQ,CACpB,GAAIA,EAAO,OAAO,OAAS,KAAK,gBAAiB,CAC/C,KAAK,QAAU,GACf,KAAK,cAAgB,GACrB,KAAK,iBAAmB,GACxB,KAAK,OAAS,GAEd,IAAMC,EAAS,KAAK,MAAM,cAAc,QAAQ,EAC5CA,GACFA,EAAO,OAAO,CAElB,CACF,EACA,kBAAmB,CACjB,KAAK,UAAU,oBAAqB,CAAE,KAAM,KAAK,eAAgB,CAAC,EAClE,KAAK,iBAAmB,EAC1B,EACA,SAAU,CACR,KAAK,UAAU,kBAAmB,CAAE,KAAM,KAAK,eAAgB,CAAC,EAChE,KAAK,iBAAmB,EAC1B,EACA,UAAW,CACT,IAAMC,EAAY,+BAGlB,OAFiB,KAAK,MAAM,QAAQ,SAElBA,CACpB,EACA,WAAY,CACV,OAAO,KAAK,MAAM,QAAQ,GAE5B,EACA,UAAW,CACT,OAAO,KAAK,MAAM,QAAQ,GAC5B,EACA,IAAI,MAAO,CACT,OAAO,KAAK,MAAM,QAAQ,IAC5B,EACA,SAAU,CACR,GAAI,KAAK,OAAS,QAChB,OAAO,IAAI,IAAI,KAAK,GAAG,EAAE,SAAS,QAAQ,IAAK,EAAE,EAGnD,IAAIC,EACF,4EACEC,EAAQ,KAAK,IAAI,MAAMD,CAAM,EACjC,OAAOC,GAASA,EAAM,GAAG,QAAU,GAAKA,EAAM,GAAK,EACrD,EACA,cAAe,CAIb,MAHU,cACR,KAAK,QACH,KAAK,QAAQ,aAAa,KAAK,SAAS,GAE9C,EACA,MAAO,CACD,KAAK,SACP,KAAK,cAAgB,GACrB,KAAK,OAAS,IAEd,KAAK,YAAc,EAEvB,CACF,EAAE,CACJ,CAAC",
  "names": ["$event", "iFrame", "urlParams", "regExp", "match"]
}
